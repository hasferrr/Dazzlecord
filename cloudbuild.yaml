steps:
  # Generate env file (for cloud build CI/CD)
  - name: node
    entrypoint: npm
    args: ["install", "create-env"]
  - name: node
    entrypoint: npm
    args: ["run", "create-env"]
    env:
      - 'ORIGIN_URL=${_ORIGIN_URL}'
      - 'AUTH_TRUST_HOST=${_AUTH_TRUST_HOST}'
      - 'NEXT_PUBLIC_SOCKET_IO_URL=${_NEXT_PUBLIC_SOCKET_IO_URL}'
      - 'DATABASE_URL=${_DATABASE_URL}'
      - 'AUTH_SECRET=${_AUTH_SECRET}'
      - 'GCS_PROJECT_ID=${_GCS_PROJECT_ID}'
      - 'GCS_BUCKET_NAME=${_GCS_BUCKET_NAME}'
      - 'GCS_SERVICE_ACCOUNT_KEY_FILE=${_GCS_SERVICE_ACCOUNT_KEY_FILE}'
      - 'GCS_CRED_PRIVATE_KEY=${_GCS_CRED_PRIVATE_KEY}'
      - 'GCS_CRED_CLIENT_EMAIL=${_GCS_CRED_CLIENT_EMAIL}'
  # Build the container image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "asia-southeast1-docker.pkg.dev/deezcord-417022/nextjs-node-repo/deezcord",
        ".",
      ]
  # Push the container image to Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "asia-southeast1-docker.pkg.dev/deezcord-417022/nextjs-node-repo/deezcord",
      ]
  # Deploy container image to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "deezcord",
        "--image",
        "asia-southeast1-docker.pkg.dev/deezcord-417022/nextjs-node-repo/deezcord",
        "--region",
        "asia-southeast1",
        "--allow-unauthenticated",
        "--min-instances",
        "0",
        "--max-instances",
        "1",
      ]
images:
  ["asia-southeast1-docker.pkg.dev/deezcord-417022/nextjs-node-repo/deezcord"]
